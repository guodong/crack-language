
import crack.io cout;
import crack.exp.g3d Vector;
import model corner, offsetForFactor, Block, LeafBlock, SparseVoxelSpace,
    LEAF_UNIT;

@import crack.ann assert;

# The offsetForFactor tests are tailored for a specific LEAF_UNIT.
@assert(LEAF_UNIT == 1);
@assert(offsetForFactor(1) == -0.5);
@assert(offsetForFactor(8) == -4.5);
@assert(offsetForFactor(64) == -36.5);

offset8 := offsetForFactor(8);
offset64 := offsetForFactor(64);
@assert(corner(Vector(0, 0, 0), 8) == Vector(offset8, offset8, offset8));

block := LeafBlock(Vector(0, 0, 0));
@assert(block.contains(Vector(0, 0, 0)));
@assert(block.contains(Vector(0.9, 0.9, 0.9)));
@assert(!block.contains(Vector(1, 0, 0)));
@assert(!block.contains(Vector(0, 1, 0)));
@assert(!block.contains(Vector(0, 0, 1)));
@assert(block.intersects(Vector(-1, -1, -1), Vector(0.5, 0.5, 0.5)));

space := SparseVoxelSpace();
space[Vector(1.5, 2.5, 3.5)] = 100;
@assert(space[Vector(1.5, 2.5, 3.5)] == 100);
space[Vector(100.5, 200.25, 300.125)] = 10;
@assert(space[Vector(100.5, 200.25, 300.125)] == 10);

@assert(space[Vector(50, 60, 70)] == 0);

cout `ok\n`;
