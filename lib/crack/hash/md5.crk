// MD5 hash algorithm wrapper class
// Copyright 2012 Conrad Steenberg <conrad.steenberg@gmail.com>
// 
//   This Source Code Form is subject to the terms of the Mozilla Public
//   License, v. 2.0. If a copy of the MPL was not distributed with this
//   file, You can obtain one at http://mozilla.org/MPL/2.0/.
// 
// 6/22/2012

import crack.lang Buffer, ManagedBuffer;
import crack.hash Hash;
import crack.runtime md5, md5_init, md5_append, md5_finish, free;

##  Higher level MD5 class for use with Crack data structures
class MD5 : Hash {
    md5 _state;

    oper init() : _state = md5_init() {
        _size = 16;
    }

    ## Add more data
    void update(Buffer buf){
        md5_append(_state, buf.buffer, buf.size);
    }

    ## Alternative constructor taking a buffer argument
    oper init(Buffer buf) : _state = md5_init() {
        _size = 16;
        update(buf);
    }

    ## Return raw digest as a buffer of 16 bytes
    Buffer digest() {
        b := ManagedBuffer(16);
        b.size = 16;
        md5_finish(_state, b.buffer);
        return b;
    }

    oper del() {
        free(_state);
    }
}
