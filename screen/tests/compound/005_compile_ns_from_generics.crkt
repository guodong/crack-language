%%TEST%%
compile namespace in generics
%%ARGS%%
%%FILE%%
# Verifies that we persist the compile namespace correctly in generics.
# We also use this to verify elements that were problematic in generic
# serialization, since it forces a generic to be instantiated from its
# serialized form.
import systest test;
test.preBootstrap = true;
test.mod('ann', I"
    import crack.compiler CrackContext;

    void a(CrackContext ctx) {
        ctx.inject(@FILE, @LINE, 'void f() {}');
    }

    void b(CrackContext ctx) {
        ctx.inject(@FILE, @LINE, 'void g() {}');
    }
    ");
test.mod('mod', I"
    @import ann a;
    class A[T] {
        @import ann b;
        @b

        void x(int j) {
            int i = j + 1;
        }
    }
    ");
test.main(I"
    import mod A;
    A[int] a;
    puts('ok');
    ");
test.run();
test.main(I"
    import mod A;
    A[float] a;
    puts('ok');
    ");
test.run();
test.addTrace('Caching');
test.run();
%%REXPECT%%
out: ok
terminated: success
out: ok
terminated: success
err: Reusing cached module ann
err: Reusing cached module mod
err: Reusing cached module mod.A\[.builtin.float\]
err: Reusing cached script .*/main.crk
out: ok
terminated: success
%%STDIN%%
